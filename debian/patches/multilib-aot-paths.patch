From: =?utf-8?b?0JvQsNCx0L7RgNCw0YLQvtGA0LjRjyA1MA==?= <team@lab50.net>
Date: Fri, 11 Jun 2021 13:01:24 +0300
Subject: multilib-aot-paths

===================================================================
---
 mono/metadata/Makefile.am        |  2 +-
 mono/metadata/mono-config-dirs.c | 10 ++++++++++
 mono/metadata/mono-config-dirs.h |  3 +++
 mono/mini/aot-runtime.c          | 24 +++++++++++++++++++-----
 4 files changed, 33 insertions(+), 6 deletions(-)

diff --git a/mono/metadata/Makefile.am b/mono/metadata/Makefile.am
index 682347c..d437fa8 100644
--- a/mono/metadata/Makefile.am
+++ b/mono/metadata/Makefile.am
@@ -125,7 +125,7 @@ mono-config-dirs.lo: Makefile
 libmonoruntime_config_la_SOURCES = \
 	mono-config-dirs.h		\
 	mono-config-dirs.c
-libmonoruntime_config_la_CPPFLAGS = $(AM_CPPFLAGS) -DMONO_BINDIR=\"$(bindir)/\" -DMONO_ASSEMBLIES=\"$(assembliesdir)\" -DMONO_CFG_DIR=\"$(confdir)\" -DMONO_RELOC_LIBDIR=\"$(reloc_libdir)\" @CXX_ADD_CFLAGS@
+libmonoruntime_config_la_CPPFLAGS = $(AM_CPPFLAGS) -DMONO_BINDIR=\"$(bindir)/\" -DMONO_ASSEMBLIES=\"$(assembliesdir)\" -DMONO_CFG_DIR=\"$(confdir)\" -DMONO_RELOC_LIBDIR=\"$(reloc_libdir)\" -DMONO_STATE_DIR=\"$(localstatedir)\" @CXX_ADD_CFLAGS@
 
 #
 # Support is a separate library because it is not valid C++.
diff --git a/mono/metadata/mono-config-dirs.c b/mono/metadata/mono-config-dirs.c
index b526b41..3c166be 100644
--- a/mono/metadata/mono-config-dirs.c
+++ b/mono/metadata/mono-config-dirs.c
@@ -51,3 +51,13 @@ mono_config_get_reloc_lib_dir (void)
 #endif
 }
 
+const char*
+mono_config_get_localstate_dir (void)
+{
+#ifdef MONO_STATE_DIR
+	return MONO_STATE_DIR;
+#else
+	return NULL;
+#endif
+}
+
diff --git a/mono/metadata/mono-config-dirs.h b/mono/metadata/mono-config-dirs.h
index d0755f3..4c9570d 100644
--- a/mono/metadata/mono-config-dirs.h
+++ b/mono/metadata/mono-config-dirs.h
@@ -20,4 +20,7 @@ mono_config_get_bin_dir (void);
 const char*
 mono_config_get_reloc_lib_dir (void);
 
+const char*
+mono_config_get_localstate_dir (void);
+
 #endif
diff --git a/mono/mini/aot-runtime.c b/mono/mini/aot-runtime.c
index 5e6fc01..98edaf1 100644
--- a/mono/mini/aot-runtime.c
+++ b/mono/mini/aot-runtime.c
@@ -54,6 +54,7 @@
 #include <mono/metadata/gc-internals.h>
 #include <mono/metadata/threads-types.h>
 #include <mono/metadata/mono-endian.h>
+#include <mono/metadata/mono-config-dirs.h>
 #include <mono/utils/mono-logger-internals.h>
 #include <mono/utils/mono-mmap.h>
 #include <mono/utils/mono-compiler.h>
@@ -2168,8 +2169,8 @@ load_aot_module (MonoAssemblyLoadContext *alc, MonoAssembly *assembly, gpointer
 			sofile = mono_dl_open (aot_name, MONO_DL_LAZY, &err);
 			if (sofile) {
 				found_aot_name = g_strdup (aot_name);
+				mono_trace (G_LOG_LEVEL_INFO, MONO_TRACE_AOT, "AOT: image '%s' found", aot_name);
 			} else {
-				mono_trace (G_LOG_LEVEL_INFO, MONO_TRACE_AOT, "AOT: image '%s' not found: %s", aot_name, err);
 				g_free (err);
 			}
 			g_free (aot_name);
@@ -2177,13 +2178,26 @@ load_aot_module (MonoAssemblyLoadContext *alc, MonoAssembly *assembly, gpointer
 #ifndef PLATFORM_ANDROID
 		if (!sofile) {
 			char *basename = g_path_get_basename (assembly->image->name);
-			aot_name = g_strdup_printf ("%s/mono/aot-cache/%s/%s%s", mono_assembly_getrootdir(), MONO_ARCHITECTURE, basename, MONO_SOLIB_EXT);
+			aot_name = g_strdup_printf ("%s/mono/%s%s", mono_config_get_localstate_dir(), basename, MONO_SOLIB_EXT);
 			g_free (basename);
 			sofile = mono_dl_open (aot_name, MONO_DL_LAZY, &err);
 			if (!sofile) {
-				mono_trace (G_LOG_LEVEL_INFO, MONO_TRACE_AOT, "AOT: image '%s' not found: %s", aot_name, err);
 				g_free (err);
-			}
+			} else {
+				mono_trace (G_LOG_LEVEL_INFO, MONO_TRACE_AOT, "AOT: image '%s' found", aot_name);
+                        }
+			g_free (aot_name);
+		}
+		if (!sofile) {
+			char *basename = g_path_get_basename (assembly->image->name);
+			aot_name = g_strdup_printf ("%s/mono/aot/%s%s", mono_native_getrootdir(), basename, MONO_SOLIB_EXT);
+			g_free (basename);
+			sofile = mono_dl_open (aot_name, MONO_DL_LAZY, &err);
+			if (!sofile) {
+				g_free (err);
+			} else {
+				mono_trace (G_LOG_LEVEL_INFO, MONO_TRACE_AOT, "AOT: image '%s' found", aot_name);
+                        }
 			g_free (aot_name);
 		}
 #endif
@@ -2198,8 +2212,8 @@ load_aot_module (MonoAssemblyLoadContext *alc, MonoAssembly *assembly, gpointer
 				sofile = mono_dl_open (aot_name, MONO_DL_LAZY, &err);
 				if (sofile) {
 					found_aot_name = g_strdup (aot_name);
+					mono_trace (G_LOG_LEVEL_INFO, MONO_TRACE_AOT, "AOT: image '%s' found", aot_name);
 				} else {
-					mono_trace (G_LOG_LEVEL_INFO, MONO_TRACE_AOT, "AOT: image '%s' not found: %s", aot_name, err);
 					g_free (err);
 				}
 				g_free (basename);
